package com.hmvsoluciones.domain;

import static com.hmvsoluciones.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class CompraAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraAllPropertiesEquals(Compra expected, Compra actual) {
        assertCompraAutoGeneratedPropertiesEquals(expected, actual);
        assertCompraAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraAllUpdatablePropertiesEquals(Compra expected, Compra actual) {
        assertCompraUpdatableFieldsEquals(expected, actual);
        assertCompraUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraAutoGeneratedPropertiesEquals(Compra expected, Compra actual) {
        assertThat(actual)
            .as("Verify Compra auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraUpdatableFieldsEquals(Compra expected, Compra actual) {
        assertThat(actual)
            .as("Verify Compra relevant properties")
            .satisfies(a -> assertThat(a.getFechaCompra()).as("check fechaCompra").isEqualTo(expected.getFechaCompra()))
            .satisfies(a -> assertThat(a.getTotal()).as("check total").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getTotal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraUpdatableRelationshipsEquals(Compra expected, Compra actual) {
        assertThat(actual)
            .as("Verify Compra relationships")
            .satisfies(a -> assertThat(a.getProveedor()).as("check proveedor").isEqualTo(expected.getProveedor()));
    }
}
