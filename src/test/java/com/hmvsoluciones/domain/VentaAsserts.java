package com.hmvsoluciones.domain;

import static com.hmvsoluciones.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class VentaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVentaAllPropertiesEquals(Venta expected, Venta actual) {
        assertVentaAutoGeneratedPropertiesEquals(expected, actual);
        assertVentaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVentaAllUpdatablePropertiesEquals(Venta expected, Venta actual) {
        assertVentaUpdatableFieldsEquals(expected, actual);
        assertVentaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVentaAutoGeneratedPropertiesEquals(Venta expected, Venta actual) {
        assertThat(actual)
            .as("Verify Venta auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVentaUpdatableFieldsEquals(Venta expected, Venta actual) {
        assertThat(actual)
            .as("Verify Venta relevant properties")
            .satisfies(a -> assertThat(a.getFechaVenta()).as("check fechaVenta").isEqualTo(expected.getFechaVenta()))
            .satisfies(a -> assertThat(a.getTotal()).as("check total").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getTotal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVentaUpdatableRelationshipsEquals(Venta expected, Venta actual) {
        assertThat(actual)
            .as("Verify Venta relationships")
            .satisfies(a -> assertThat(a.getCliente()).as("check cliente").isEqualTo(expected.getCliente()));
    }
}
